-- Create the status ENUM type
CREATE TYPE deal_status AS ENUM ('pending', 'accepted', 'rejected', 'completed');

-- Core Tables
CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(100) UNIQUE,
    email VARCHAR(255),
    profile_bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50)
);

CREATE TABLE brand_representatives (
    rep_id INT PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    email VARCHAR(255),
    brand_id INT,
    status VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (brand_id) REFERENCES brands(brand_id)
);

CREATE TABLE brands (
    brand_id INT PRIMARY KEY,
    brand_name VARCHAR(255),
    website VARCHAR(255),
    industry VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    brand_id INT,
    product_name VARCHAR(255),
    description TEXT,
    price DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (brand_id) REFERENCES brands(brand_id)
);

-- Messaging System
CREATE TABLE threads (
    thread_id INT PRIMARY KEY,
    subject VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50)
);

CREATE TABLE thread_participants (
    thread_id INT,
    participant_type VARCHAR(50), -- 'user' or 'brand_rep'
    participant_id INT,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (thread_id, participant_type, participant_id),
    FOREIGN KEY (thread_id) REFERENCES threads(thread_id)
);

CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    thread_id INT,
    sender_type VARCHAR(50), -- 'user' or 'brand_rep'
    sender_id INT,
    content TEXT,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    parent_message_id INT NULL, -- for reply chains
    FOREIGN KEY (thread_id) REFERENCES threads(thread_id),
    FOREIGN KEY (parent_message_id) REFERENCES messages(message_id)
);

-- Deal Management
CREATE TABLE deals (
    deal_id INT PRIMARY KEY,
    thread_id INT,
    product_id INT,
    user_id INT,
    rep_id INT,
    status deal_status,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    terms TEXT,
    compensation DECIMAL(10,2),
    FOREIGN KEY (thread_id) REFERENCES threads(thread_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (rep_id) REFERENCES brand_representatives(rep_id)
);

-- Create indexes for better performance
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_brand_reps_email ON brand_representatives(email);
CREATE INDEX idx_threads_updated ON threads(updated_at);
CREATE INDEX idx_messages_thread ON messages(thread_id);
CREATE INDEX idx_deals_status ON deals(status);
